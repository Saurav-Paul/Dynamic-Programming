// Bitmask DP
// There is a list between woman and man and also gives value between each of them.
// I have to match them in a way that the matching value is maximum
// Runtime for this program is O(N*2^N)
#include <iostream>
#include <cstring>
#include <cstdio>
using namespace std;
#define memo(a,b) memset(a,b,sizeof(a))
int matrix[50][50];
int dp[1<<20];
bool Check(int N,int Pos) {return (bool)(N&(1<<Pos));} // Check the bit position of an integer
int Set(int N,int Pos) {return N=(N|(1<<Pos));} // Set the bit position to 1 of an integer
int Reset(int N,int Pos) {return N=(N&(~(1<<Pos)));} // Reset the bit position to 0 of an integer
int DP(int mask,int index, int N)
{
    if(dp[mask]!=-1) return dp[mask];
    if(mask==(1<<N)-1) return 0;
    int ans=0;
    for(int i=1;i<=N;i++)
    {
        if(Check(mask,i-1)==false)
        {
            ans = max(ans,matrix[index][i]+DP(Set(mask,i-1),index+1,N));
        }
    }
    return dp[mask]=ans;
}
int main()
{
    int N; // N is the numbers of man and woman
    cin>>N;
    for(int i=1;i<=N;i++) for(int j=1;j<=N;j++) cin>>matrix[i][j]; // matrix[i][j] is the marriage value between i and j
    memo(dp,-1);
    cout<<DP(0,1,N)<<"\n";
    return 0;
}
/*
3
1 2 3
6 5 4
8 1 2
*/
/*
16
*/
